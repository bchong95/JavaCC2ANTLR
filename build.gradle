buildscript {
    ext.kotlin_version = '1.2.10'

    repositories {
        mavenCentral()        
        maven {
            name 'JFrog OSS snapshot repo'
            url  'https://oss.jfrog.org/oss-snapshot-local/'
        }
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'antlr'
apply plugin: 'idea'
apply plugin: 'application'

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

project.group   = "com.strumenta"
project.version = "0.1"

mainClassName = "com.strumenta.javacc.JavaCCToAntlrConverter"

dependencies {
  antlr "org.antlr:antlr4:4.7.1"
  compile "org.antlr:antlr4-runtime:4.7.1"
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  compile 'me.tomassetti:kolasu:0.1.1'
  testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
  testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
  testCompile 'junit:junit:4.12'

  compile group: 'net.java.dev.javacc', name: 'javacc', version: '7.0.3'
  compile 'com.github.julianthome:inmemantlr-api:1.4'
}

generateGrammarSource {
    maxHeapSize = "64m"
    arguments += ['-package', 'com.strumenta.javacc']
    outputDirectory = new File("generated-src/antlr/main/com/strumenta/javacc".toString())
}
compileJava.dependsOn generateGrammarSource
sourceSets {
    generated {
        java.srcDir 'generated-src/antlr/main/'
    }
}
compileJava.source sourceSets.generated.java, sourceSets.main.java
compileKotlin.source sourceSets.generated.java, sourceSets.main.java, sourceSets.main.kotlin

clean{
    delete "generated-src"
}

idea {
    module {
        //sourceDirs += file("generated-src/antlr/main")
    }
}


